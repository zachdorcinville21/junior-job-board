{"ast":null,"code":"var _jsxFileName = \"/Users/zacharydorcinville/junior-dev/junior-jobs/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Jobs from './Jobs';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst JOB_API_URL = 'http://localhost:3001/jobs';\nconst sampleJobs = [{\n  title: 'Entry Level Software Engineer',\n  company: 'Apple'\n}, {\n  title: 'Junior Front End Developer',\n  company: 'Salesforce'\n}, {\n  title: 'Junior Front End Engineer',\n  company: 'JP Morgan'\n}, {\n  title: 'Mid Level Full-Stack Engineer',\n  company: 'Google'\n}];\n\nasync function fetchJobs(updateCb) {\n  const res = await fetch(JOB_API_URL);\n  const json = await res.json();\n  updateCb(json);\n  console.log({\n    json\n  });\n} // filter by location(location), job type(type), date posted (created_at)\n\n\nconst locations = [];\nconst jobTypes = [];\nconst datesPosted = [];\njobs.forEach(job => {\n  if (locations.includes(job.location)) return;\n  locations.push(job.location);\n  if (jobTypes.includes(job.type)) return;\n  jobTypes.push(job.type);\n  if (datesPosted.includes(job.created_at)) return;\n  datesPosted.push(job.created_at);\n});\n\nfunction App() {\n  const [jobList, updateJobs] = React.useState([]);\n  React.useEffect(() => {\n    fetchJobs(updateJobs);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: '#6495ED'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    className: style.field,\n    id: \"location-filter\",\n    options: locations,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Location\",\n      variant: \"outlined\",\n      autoComplete: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 46\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    className: style.field,\n    id: \"type-filter\",\n    options: jobTypes,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Job Type\",\n      variant: \"outlined\",\n      autoComplete: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 46\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    className: style.field,\n    id: \"location-filter\",\n    options: datesPosted,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Date Posted\",\n      variant: \"outlined\",\n      autoComplete: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 46\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Jobs, {\n    jobs: jobList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zacharydorcinville/junior-dev/junior-jobs/client/src/App.js"],"names":["React","Jobs","TextField","Autocomplete","JOB_API_URL","sampleJobs","title","company","fetchJobs","updateCb","res","fetch","json","console","log","locations","jobTypes","datesPosted","jobs","forEach","job","includes","location","push","type","created_at","App","jobList","updateJobs","useState","useEffect","backgroundColor","style","field","params"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Jobs from './Jobs';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst JOB_API_URL = 'http://localhost:3001/jobs';\n\nconst sampleJobs = [\n  { title: 'Entry Level Software Engineer', company: 'Apple' },\n  { title: 'Junior Front End Developer', company: 'Salesforce' },\n  { title: 'Junior Front End Engineer', company: 'JP Morgan' },\n  { title: 'Mid Level Full-Stack Engineer', company: 'Google' }\n];\n\nasync function fetchJobs(updateCb) {\n  const res = await fetch(JOB_API_URL);\n  const json = await res.json();\n\n  updateCb(json);\n\n  console.log({ json });\n}\n\n// filter by location(location), job type(type), date posted (created_at)\nconst locations = [];\nconst jobTypes = [];\nconst datesPosted = [];\n\njobs.forEach(job => {\n  if (locations.includes(job.location)) return;\n  locations.push(job.location);\n\n  if (jobTypes.includes(job.type)) return;\n  jobTypes.push(job.type);\n\n  if (datesPosted.includes(job.created_at)) return;\n  datesPosted.push(job.created_at);\n});\n\nfunction App() {\n\n  const [jobList, updateJobs] = React.useState([])\n\n  React.useEffect(() => {\n    fetchJobs(updateJobs);\n  }, [])\n\n  return (\n    <div className=\"App\" style={{backgroundColor: '#6495ED'}}>\n      <div className='filters'>\n                <Autocomplete\n                    className={style.field}\n                    id=\"location-filter\"\n                    options={locations}\n                    renderInput={(params) => <TextField {...params} label=\"Location\" variant=\"outlined\" autoComplete={true} />}\n                />\n                <Autocomplete\n                    className={style.field}\n                    id=\"type-filter\"\n                    options={jobTypes}\n                    renderInput={(params) => <TextField {...params} label=\"Job Type\" variant=\"outlined\" autoComplete={true} />}\n                />\n                <Autocomplete\n                    className={style.field}\n                    id=\"location-filter\"\n                    options={datesPosted}\n                    renderInput={(params) => <TextField {...params} label=\"Date Posted\" variant=\"outlined\" autoComplete={true} />}\n                />\n            </div>\n\n      <Jobs jobs={jobList} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}