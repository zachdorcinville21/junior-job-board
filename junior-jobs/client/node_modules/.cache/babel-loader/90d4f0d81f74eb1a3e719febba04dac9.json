{"ast":null,"code":"var _jsxFileName = \"/Users/zacharydorcinville/junior-dev/junior-jobs/client/src/Jobs.js\";\nimport React from 'react';\nimport Job from './Job';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport JobModal from './JobModal';\nexport default function Jobs({\n  jobs\n}) {\n  // modal\n  const [open, setOpen] = React.useState(false);\n  const [selectedJob, selectJob] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // pagination\n\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const numJobs = jobs.length;\n  const numPages = Math.ceil(numJobs / 50);\n  const jobsOnPage = jobs.slice(activeStep * 50, activeStep * 50 + 50);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  } // set random key for each job listing\n\n\n  function generateId(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(JobModal, {\n    open: open,\n    job: selectedJob,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h1\",\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Junior Level Software Engineer Jobs\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, numJobs, \" jobs found.\"), jobsOnPage.map((job, i) => /*#__PURE__*/React.createElement(Job, {\n    job: job,\n    key: generateId(6),\n    onClick: () => {\n      selectJob(job);\n      handleClickOpen();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-num\",\n    style: {\n      padding: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Page \", activeStep + 1, \" of \", numPages), /*#__PURE__*/React.createElement(MobileStepper, {\n    variant: \"progress\",\n    steps: Math.ceil(numJobs / 50),\n    position: \"static\",\n    activeStep: activeStep,\n    nextButton: /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleNext,\n      disabled: activeStep === 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Next\", /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })),\n    backButton: /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleBack,\n      disabled: activeStep === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }), \"Back\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/zacharydorcinville/junior-dev/junior-jobs/client/src/Jobs.js"],"names":["React","Job","Typography","Button","makeStyles","useTheme","KeyboardArrowLeft","KeyboardArrowRight","MobileStepper","JobModal","Jobs","jobs","open","setOpen","useState","selectedJob","selectJob","handleClickOpen","handleClose","activeStep","setActiveStep","numJobs","length","numPages","Math","ceil","jobsOnPage","slice","handleNext","prevActiveStep","handleBack","generateId","result","characters","charactersLength","i","charAt","floor","random","color","map","job","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Job from './Job';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport JobModal from './JobModal';\n\n\nexport default function Jobs({ jobs }) {\n\n    // modal\n    const [open, setOpen] = React.useState(false);\n    const [selectedJob, selectJob] = React.useState({});\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // pagination\n    const [activeStep, setActiveStep] = React.useState(0);\n    const numJobs = jobs.length;\n    const numPages = Math.ceil(numJobs / 50);\n\n    const jobsOnPage = jobs.slice(activeStep * 50, (activeStep * 50) + 50);\n\n    function handleNext() {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }\n\n    function handleBack() {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n    }\n\n    // set random key for each job listing\n    function generateId(length) {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    return (\n        <div className='jobs'>\n            <JobModal open={open} job={selectedJob} handleClose={handleClose} />\n            <Typography variant='h4' component='h1' style={{ color: 'white' }}>\n                Junior Level Software Engineer Jobs\n            </Typography>\n            <Typography variant='h6' component='h1' style={{ color: 'white' }}>\n                {numJobs} jobs found.\n            </Typography>\n\n            {jobsOnPage.map((job, i) => <Job job={job} key={generateId(6)} onClick={() => {\n                selectJob(job);\n                handleClickOpen();\n            }} />)}\n            <div id='page-num' style={{ padding: '8px' }}>\n                Page {activeStep + 1} of {numPages}\n            </div>\n\n            <MobileStepper\n                variant=\"progress\"\n                steps={Math.ceil(numJobs / 50)}\n                position=\"static\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\n                        Next\n                        <KeyboardArrowRight />\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        <KeyboardArrowLeft />\n                        Back\n                    </Button>\n                }\n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}