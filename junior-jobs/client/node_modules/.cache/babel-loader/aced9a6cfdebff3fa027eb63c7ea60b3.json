{"ast":null,"code":"var _jsxFileName = \"/Users/zacharydorcinville/junior-dev/junior-jobs/client/src/Jobs.js\";\nimport React, { useState, useEffect } from 'react';\nimport Job from './Job';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport JobModal from './JobModal';\nimport { JobList, Filter, Input } from './styles';\nimport { handleKeywordSearch, handleCitySearch } from './utilities/index';\nimport coffee from \"./images/coffee.svg\";\nexport default function Jobs({\n  jobs\n}) {\n  // modal\n  const [open, setOpen] = useState(false);\n  const [selectedJob, selectJob] = useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // job list\n\n\n  const [noResults, setNoResults] = useState(false);\n  const [activeStep, setActiveStep] = useState(0);\n  const numJobs = jobs.length;\n  const numPages = Math.ceil(numJobs / 10);\n  const [numberPages, setNumPages] = useState(numPages);\n  const offset = 10 * activeStep;\n  const [allJobs, setAllJobs] = useState(jobs);\n  const [jobsShown, setJobsShown] = useState([]);\n  useEffect(() => {\n    setJobsShown(allJobs.slice(offset, offset + 10));\n  }, [activeStep]);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  const onJobSelect = job => {\n    selectJob(job);\n    handleClickOpen();\n  };\n\n  const onFilter = e => {\n    switch (e.target.id) {\n      case \"keyword\":\n        const jobsByKeyword = handleKeywordSearch(jobs, e.target.value);\n\n        if (jobsByKeyword !== null) {\n          setAllJobs(jobsByKeyword);\n          setJobsShown(jobsByKeyword.slice(offset, offset + 10));\n          setNumPages(Math.ceil(jobsByKeyword.length / 10));\n        } else {\n          setNoResults(true);\n        }\n\n        break;\n\n      case \"city\":\n        const jobsByCity = handleCitySearch(jobs, e.target.value);\n\n        if (jobsByCity) {\n          setAllJobs(jobsByCity);\n          setJobsShown(jobsByCity.slice(offset, offset + 10));\n          setNumPages(Math.ceil(jobsByCity.length / 10));\n        } else {\n          setNoResults(true);\n        }\n\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(JobModal, {\n    open: open,\n    job: selectedJob,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"heading\",\n    style: {\n      padding: '15px',\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    style: {\n      color: 'white',\n      fontFamily: 'Encode Sans',\n      fontSize: '27px',\n      marginLeft: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Junior Level Software Jobs\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      color: 'white',\n      fontFamily: 'Encode Sans',\n      fontSize: '16px',\n      marginLeft: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, numJobs, \" jobs found.\")), /*#__PURE__*/React.createElement(JobList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"keyword\",\n    placeholder: \"filter by keyword\",\n    onChange: onFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"city\",\n    placeholder: \"filter by city\",\n    onChange: onFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })), jobsShown.map((job, idx) => /*#__PURE__*/React.createElement(Job, {\n    job: job,\n    key: idx,\n    onSelect: onJobSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 46\n    }\n  }))), noResults === true ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 35\n    }\n  }, \"No results.\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-num\",\n    style: {\n      color: 'white',\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Page \", activeStep + 1, \" of \", numberPages), /*#__PURE__*/React.createElement(MobileStepper, {\n    variant: \"progress\",\n    steps: Math.ceil(numJobs / 10),\n    position: \"bottom\",\n    activeStep: activeStep,\n    nextButton: /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleNext,\n      disabled: activeStep + 1 === numberPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Next\", /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    })),\n    backButton: /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleBack,\n      disabled: activeStep === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }), \"Back\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), window.innerWidth >= 1076 ? /*#__PURE__*/React.createElement(\"img\", {\n    src: coffee,\n    style: {\n      width: \"35%\",\n      height: \"35%\",\n      position: \"fixed\",\n      top: \"50%\",\n      right: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 43\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/Users/zacharydorcinville/junior-dev/junior-jobs/client/src/Jobs.js"],"names":["React","useState","useEffect","Job","Typography","Button","KeyboardArrowLeft","KeyboardArrowRight","MobileStepper","JobModal","JobList","Filter","Input","handleKeywordSearch","handleCitySearch","Jobs","jobs","open","setOpen","selectedJob","selectJob","handleClickOpen","handleClose","noResults","setNoResults","activeStep","setActiveStep","numJobs","length","numPages","Math","ceil","numberPages","setNumPages","offset","allJobs","setAllJobs","jobsShown","setJobsShown","slice","handleNext","prevActiveStep","handleBack","onJobSelect","job","onFilter","e","target","id","jobsByKeyword","value","jobsByCity","padding","textAlign","color","fontFamily","fontSize","marginLeft","map","idx","window","innerWidth","coffee","width","height","position","top","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Job from './Job';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport JobModal from './JobModal';\nimport { JobList, Filter, Input } from './styles';\nimport { handleKeywordSearch, handleCitySearch } from './utilities/index';\nimport coffee from './images/coffee.svg';\n\n\nexport default function Jobs({ jobs }) {\n    // modal\n    const [open, setOpen] = useState(false);\n    const [selectedJob, selectJob] = useState({});\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    // job list\n    const [noResults, setNoResults] = useState(false);\n    const [activeStep, setActiveStep] = useState(0);\n    const numJobs = jobs.length;\n    const numPages = Math.ceil(numJobs / 10);\n    const [numberPages, setNumPages] = useState(numPages);\n    const offset = 10 * activeStep;\n\n    const [allJobs, setAllJobs] = useState(jobs);\n    const [jobsShown, setJobsShown] = useState([]);\n\n    useEffect(() => {\n        setJobsShown(allJobs.slice(offset, offset + 10));\n    }, [activeStep])\n\n\n    function handleNext() {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }\n\n    function handleBack() {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n    }\n\n    const onJobSelect = (job) => {\n        selectJob(job);\n        handleClickOpen();\n    }\n\n    const onFilter = e => {\n        switch (e.target.id) {\n            case \"keyword\":\n                const jobsByKeyword = handleKeywordSearch(jobs, e.target.value);\n                if (jobsByKeyword !== null) {\n                    setAllJobs(jobsByKeyword);\n                    setJobsShown(jobsByKeyword.slice(offset, offset + 10));\n                    setNumPages(Math.ceil(jobsByKeyword.length / 10));\n                } else {\n                    setNoResults(true);\n                }\n                break;\n            case \"city\":\n                const jobsByCity = handleCitySearch(jobs, e.target.value);\n                if (jobsByCity) {\n                    setAllJobs(jobsByCity);\n                    setJobsShown(jobsByCity.slice(offset, offset + 10));\n                    setNumPages(Math.ceil(jobsByCity.length / 10));\n                } else {\n                    setNoResults(true);\n                }\n                break;\n        }\n    }\n\n    return (\n        <div className='jobs'>\n            <JobModal open={open} job={selectedJob} handleClose={handleClose} />\n            <div id=\"heading\" style={{ padding: '15px', textAlign: \"left\" }}>\n                <Typography variant='h4' style={{ color: 'white', fontFamily: 'Encode Sans', fontSize: '27px', marginLeft: '0.5rem' }}>\n                    Junior Level Software Jobs\n                </Typography>\n                <Typography variant='h6' style={{ color: 'white', fontFamily: 'Encode Sans', fontSize: '16px', marginLeft: '0.5rem' }}>\n                    {numJobs} jobs found.\n                </Typography>\n            </div>\n\n            <JobList>\n                <Filter>\n                    <Input id='keyword' placeholder=\"filter by keyword\" onChange={onFilter} />\n                    <Input id='city' placeholder=\"filter by city\" onChange={onFilter} />\n                </Filter>\n                {jobsShown.map((job, idx) => <Job job={job} key={idx} onSelect={onJobSelect} />)}\n            </JobList>\n\n            {noResults === true ? <Typography variant='h1'>No results.</Typography> : null}\n\n            <div id='page-num' style={{ color: 'white', textAlign: \"center\",}}>\n                Page {activeStep + 1} of {numberPages}\n            </div>\n\n            <MobileStepper\n                variant=\"progress\"\n                steps={Math.ceil(numJobs / 10)}\n                position=\"bottom\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep + 1 === numberPages}>\n                        Next\n                        <KeyboardArrowRight />\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        <KeyboardArrowLeft />\n                        Back\n                    </Button>\n                }\n            />\n            { window.innerWidth >= 1076 ? <img src={coffee} style={{ width: \"35%\", height: \"35%\", position: \"fixed\", top: \"50%\", right: \"2%\" }} /> : null}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}