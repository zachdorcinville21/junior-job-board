{"ast":null,"code":"var _jsxFileName = \"/Users/zacharydorcinville/junior-dev/junior-jobs/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Jobs from './Jobs';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nconst JOB_API_URL = 'http://localhost:3001/jobs';\n\nasync function fetchJobs(updateCb) {\n  const res = await fetch(JOB_API_URL);\n  const json = await res.json();\n  updateCb(json);\n  console.log({\n    json\n  });\n}\n\nfunction App() {\n  const [jobList, updateJobs] = useState([]); // get distinct locations, job types, and dates posted for all jobs\n  //const [jobsShown, setJobsShown] = useState([]);\n\n  const locations = [];\n  const jobTypes = [];\n  const datesPosted = [];\n  jobList.forEach(job => {\n    if (locations.includes(job.location)) return;\n    locations.push(job.location);\n    if (jobTypes.includes(job.type)) return;\n    jobTypes.push(job.type);\n    if (datesPosted.includes(job.created_at)) return;\n    datesPosted.push(job.created_at);\n  });\n  useEffect(() => {\n    fetchJobs(updateJobs);\n  }, []);\n\n  function handleLocationChange(event) {\n    const newJobs = jobList.filter(job => {\n      return job.location == event.target.value;\n    });\n    const newObj = {\n      jobList: newJobs\n    };\n    updateJobs(newObj);\n  }\n\n  function handleTypeChange(event) {\n    const newJobs = jobList.filter(job => {\n      return job.type == event.target.value;\n    });\n    const newObj = {\n      jobList: newJobs\n    };\n    updateJobs(newObj);\n  }\n\n  function handleDateChange(event) {\n    const newJobs = jobList.filter(job => {\n      return job.created_at == event.target.value;\n    });\n    const newObj = {\n      jobList: newJobs\n    };\n    updateJobs(newObj);\n  }\n\n  const filterStyle = makeStyles({\n    field: {\n      width: '120px',\n      margin: '20px'\n    },\n    textField: {\n      margin: 'auto',\n      marginRight: '320px'\n    }\n  });\n  const filterContainerStyle = {\n    width: '170px',\n    marginTop: '200px',\n    border: '2px solid black',\n    position: 'absolute',\n    backgroundColor: 'white'\n  };\n  const style = filterStyle();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      marginTop: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters col-sm-2\",\n    style: filterContainerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    className: style.field,\n    id: \"location-filter\",\n    options: locations,\n    onChange: handleLocationChange,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      className: style.textField\n    }, params, {\n      label: \"Location\",\n      variant: \"outlined\",\n      autoComplete: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 36\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    className: style.field,\n    id: \"type-filter\",\n    options: jobTypes,\n    onChange: handleTypeChange,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      className: style.textField\n    }, params, {\n      label: \"Job Type\",\n      variant: \"outlined\",\n      autoComplete: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 36\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    className: style.field,\n    id: \"location-filter\",\n    options: datesPosted,\n    onChange: handleDateChange,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      className: style.textField\n    }, params, {\n      label: \"Date Posted\",\n      variant: \"outlined\",\n      autoComplete: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 36\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Jobs, {\n    jobs: jobList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zacharydorcinville/junior-dev/junior-jobs/client/src/App.js"],"names":["React","useState","useEffect","Jobs","TextField","Autocomplete","makeStyles","useTheme","JOB_API_URL","fetchJobs","updateCb","res","fetch","json","console","log","App","jobList","updateJobs","locations","jobTypes","datesPosted","forEach","job","includes","location","push","type","created_at","handleLocationChange","event","newJobs","filter","target","value","newObj","handleTypeChange","handleDateChange","filterStyle","field","width","margin","textField","marginRight","filterContainerStyle","marginTop","border","position","backgroundColor","style","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Jobs from './Jobs';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst JOB_API_URL = 'http://localhost:3001/jobs';\n\nasync function fetchJobs(updateCb) {\n  const res = await fetch(JOB_API_URL);\n  const json = await res.json();\n\n  updateCb(json);\n\n  console.log({ json });\n}\n\nfunction App() {\n\n  const [jobList, updateJobs] = useState([])\n\n  // get distinct locations, job types, and dates posted for all jobs\n  //const [jobsShown, setJobsShown] = useState([]);\n\n  const locations = [];\n  const jobTypes = [];\n  const datesPosted = [];\n\n  jobList.forEach(job => {\n    if (locations.includes(job.location)) return;\n    locations.push(job.location);\n\n    if (jobTypes.includes(job.type)) return;\n    jobTypes.push(job.type);\n\n    if (datesPosted.includes(job.created_at)) return;\n    datesPosted.push(job.created_at);\n  });\n\n  useEffect(() => {\n    fetchJobs(updateJobs);\n  }, []);\n\n  function handleLocationChange(event) {\n    const newJobs = jobList.filter(job => {\n      return job.location == event.target.value;\n    });\n    const newObj = { jobList: newJobs };\n\n    updateJobs(newObj);\n  }\n\n  function handleTypeChange(event) {\n    const newJobs = jobList.filter(job => {\n      return job.type == event.target.value;\n    });\n    const newObj = { jobList: newJobs };\n\n    updateJobs(newObj);\n  }\n\n  function handleDateChange(event) {\n    const newJobs = jobList.filter(job => {\n      return job.created_at == event.target.value;\n    });\n    const newObj = { jobList: newJobs };\n\n    updateJobs(newObj);\n  }\n\n  const filterStyle = makeStyles({\n    field: {\n      width: '120px',\n      margin: '20px',\n    },\n\n    textField: {\n      margin: 'auto',\n      marginRight: '320px',\n    }\n  });\n\n  const filterContainerStyle = {\n    width: '170px',\n    marginTop: '200px',\n    border: '2px solid black',\n    position: 'absolute',\n    backgroundColor: 'white',\n  }\n\n  const style = filterStyle();\n\n  return (\n    <div className=\"App\" style={{ marginTop: '40px' }}>\n      <div className='filters col-sm-2' style={filterContainerStyle}>\n        <Autocomplete\n          className={style.field}\n          id=\"location-filter\"\n          options={locations}\n          onChange={handleLocationChange}\n          renderInput={(params) => <TextField className={style.textField} {...params} label=\"Location\" variant=\"outlined\" autoComplete={true} />}\n        />\n        <Autocomplete\n          className={style.field}\n          id=\"type-filter\"\n          options={jobTypes}\n          onChange={handleTypeChange}\n          renderInput={(params) => <TextField className={style.textField} {...params} label=\"Job Type\" variant=\"outlined\" autoComplete={true} />}\n        />\n        <Autocomplete\n          className={style.field}\n          id=\"location-filter\"\n          options={datesPosted}\n          onChange={handleDateChange}\n          renderInput={(params) => <TextField className={style.textField} {...params} label=\"Date Posted\" variant=\"outlined\" autoComplete={true} />}\n        />\n      </div>\n\n      <Jobs jobs={jobList} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}