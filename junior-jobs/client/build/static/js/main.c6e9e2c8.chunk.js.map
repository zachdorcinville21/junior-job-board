{"version":3,"sources":["images/coffee.svg","Job.js","JobModal.js","styles.js","Jobs.js","utilities/index.js","App.js","index.js"],"names":["module","exports","styles","makeStyles","text","fontFamily","Job","job","onSelect","titleTooLong","title","length","classes","Paper","className","onClick","Typography","variant","slice","company","location","created_at","split","join","Transition","React","forwardRef","props","ref","Slide","direction","modalButton","fontSize","fontWeight","JobModal","open","handleClose","Dialog","TransitionComponent","onClose","aria-labelledby","aria-describedby","keepMounted","DialogTitle","id","style","src","company_logo","DialogContent","DialogContentText","dangerouslySetInnerHTML","__html","description","DialogActions","Button","color","href","url","target","JobList","styled","div","Filter","Input","input","Jobs","jobs","useState","setOpen","selectedJob","selectJob","noResults","setNoResults","activeStep","setActiveStep","numJobs","numPages","Math","ceil","numberPages","setNumPages","offset","allJobs","setAllJobs","jobsShown","setJobsShown","useEffect","onJobSelect","onFilter","e","jobsByKeyword","value","cache","results","filter","toLowerCase","includes","handleKeywordSearch","jobsByCity","handleCitySearch","padding","textAlign","marginLeft","placeholder","onChange","map","idx","key","MobileStepper","steps","position","nextButton","size","prevActiveStep","disabled","backButton","window","innerWidth","coffee","width","height","top","right","updateCb","loadedCb","a","fetch","res","json","App","jobList","updateJobs","jobsLoaded","setLoaded","fetchJobs","marginTop","type","visible","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6e9e2c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coffee.7ab8c59e.svg\";","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core';\n\nimport './App.css';\n\nconst styles = makeStyles({\n    text: {\n        fontFamily: 'Encode Sans',\n    }\n});\n\nexport default function Job({ job, onSelect }) {\n    const titleTooLong = job.title.length > 60;\n    const classes = styles();\n    return (\n        <Paper className='job' onClick={() => onSelect(job)}>\n            <div className='job-content'>\n                <Typography className={classes.text} variant='h5'>{titleTooLong ? `${job.title.slice(0, 60)}....` : job.title}</Typography>\n                <Typography className={classes.text} variant='h6'>{job.company}</Typography>\n                <Typography className={classes.text}>{job.location}</Typography>\n            </div>\n\n            <div>\n                <Typography className={classes.text}>Posted on {job.created_at.split(' ').slice(0, 3).join(' ')}</Typography>\n            </div>\n        </Paper>\n    );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles } from '@material-ui/core';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nconst styles = makeStyles({\n    modalButton: {\n        fontSize: '10px',\n        fontWeight: 'bold',\n        fontFamily: 'Encode Sans',\n    }\n})\n\nexport default function JobModal({ job, open, handleClose }) {\n\n    if (!job.title) {\n        return (\n            <div />\n        );\n    }\n\n    const classes = styles();\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n                keepMounted\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\"><span style={{fontSize: '18px', fontFamily: 'Encode Sans'}}>{job.title} - {job.company}</span> <img id='company-logo' src={job.company_logo} /></DialogTitle>\n                <DialogContent>\n                    <DialogContentText style={{fontSize: '14px', fontFamily: 'Encode Sans'}} id=\"alert-dialog-slide-description\" dangerouslySetInnerHTML={{ __html: job.description }} />\n                </DialogContent>\n                <DialogActions>\n                    <Button className={classes.modalButton} onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                    <a id='apply-btn' href={job.url} target='_blank'>\n                        <Button className={classes.modalButton} variant='contained' color=\"primary\">\n                            Apply\n                        </Button>\n                    </a>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import styled from 'styled-components';\n\n\nexport const JobList = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    justify-content: flex-start;\n    align-items: flex-start;\n    padding-left: 2rem;\n    padding-bottom: 4rem;\n\n    @media (max-width: 1076px) {\n        justify-content: center;\n        align-items: center;\n        padding-left: 0;\n    }\n`;\n\nexport const Filter = styled.div`\n    width: 30%;\n    padding: 16px 10px;\n    background-color: #ffffff;\n    border-radius: 4px;\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n\n    @media (max-width: 990px) {\n        width: 40%;\n    }\n\n    @media (max-width: 785px) {\n        width: 65%;\n    }\n\n    @media (max-width: 480px) {\n        width: 80%;\n    }\n`;\n\nexport const Input = styled.input`\n    padding: 10px 10px;\n    width: 45%;\n    transition: ease 0.2s;\n    border-radius: 6px;\n    border: 1px solid black;\n    font-family: ${'Encode Sans'};\n\n    &:focus {\n        outline: none;\n        box-shadow: 0px 0px 5px black;\n    }\n`;\n\n\n","import React, { useState, useEffect } from 'react';\nimport Job from './Job';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport JobModal from './JobModal';\nimport { JobList, Filter, Input } from './styles';\nimport { handleKeywordSearch, handleCitySearch } from './utilities/index';\nimport coffee from './images/coffee.svg';\n\n\nexport default function Jobs({ jobs }) {\n    // modal\n    const [open, setOpen] = useState(false);\n    const [selectedJob, selectJob] = useState({});\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    // job list\n    const [noResults, setNoResults] = useState(false);\n    const [activeStep, setActiveStep] = useState(0);\n    const numJobs = jobs.length;\n    const numPages = Math.ceil(numJobs / 10);\n    const [numberPages, setNumPages] = useState(numPages);\n    const offset = 10 * activeStep;\n\n    const [allJobs, setAllJobs] = useState(jobs);\n    const [jobsShown, setJobsShown] = useState([]);\n\n    useEffect(() => {\n        setJobsShown(allJobs.slice(offset, offset + 10));\n    }, [activeStep, allJobs, offset]);\n\n    const handleNext = () => setActiveStep(prevActiveStep => prevActiveStep + 1);\n    const handleBack = () => setActiveStep(prevActiveStep => prevActiveStep - 1);\n\n    const onJobSelect = job => {\n        selectJob(job);\n        handleClickOpen();\n    }\n\n    const onFilter = e => {\n        switch (e.target.id) {\n            case \"keyword\":\n                const jobsByKeyword = handleKeywordSearch(jobs, e.target.value);\n                if (jobsByKeyword !== null) {\n                    setAllJobs(jobsByKeyword);\n                    setJobsShown(jobsByKeyword.slice(offset, offset + 10));\n                    setNumPages(Math.ceil(jobsByKeyword.length / 10));\n                } else {\n                    setNoResults(true);\n                }\n                break;\n            case \"city\":\n                const jobsByCity = handleCitySearch(jobs, e.target.value);\n                if (jobsByCity) {\n                    setAllJobs(jobsByCity);\n                    setJobsShown(jobsByCity.slice(offset, offset + 10));\n                    setNumPages(Math.ceil(jobsByCity.length / 10));\n                } else {\n                    setNoResults(true);\n                }\n                break;\n        }\n    }\n\n    return (\n        <div className='jobs'>\n            <JobModal open={open} job={selectedJob} handleClose={handleClose} />\n            <div id=\"heading\" style={{ padding: '15px', textAlign: \"left\" }}>\n                <Typography variant='h4' style={{ color: 'white', fontFamily: 'Encode Sans', fontSize: '27px', marginLeft: '0.5rem' }}>\n                    Junior Level Software Jobs\n                </Typography>\n                <Typography variant='h6' style={{ color: 'white', fontFamily: 'Encode Sans', fontSize: '16px', marginLeft: '0.5rem' }}>\n                    {numJobs} jobs found.\n                </Typography>\n            </div>\n\n            <JobList>\n                <Filter>\n                    <Input id='keyword' placeholder=\"filter by keyword\" onChange={onFilter} />\n                    <Input id='city' placeholder=\"filter by city\" onChange={onFilter} />\n                </Filter>\n                {jobsShown.map((job, idx) => <Job job={job} key={idx} onSelect={onJobSelect} />)}\n            </JobList>\n\n            {noResults === true ? <Typography variant='h1'>No results.</Typography> : null}\n\n            <div id='page-num' style={{ color: 'white', textAlign: \"center\", fontFamily: \"Encode Sans\" }}>\n                Page {activeStep + 1} of {numberPages}\n            </div>\n\n            <MobileStepper\n                variant=\"progress\"\n                steps={Math.ceil(numJobs / 10)}\n                position=\"bottom\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep + 1 === numberPages}>\n                        Next\n                        <KeyboardArrowRight />\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        <KeyboardArrowLeft />\n                        Back\n                    </Button>\n                }\n            />\n            { window.innerWidth >= 1076 ? <img src={coffee} style={{ width: \"35%\", height: \"35%\", position: \"fixed\", top: \"50%\", right: \"2%\" }} /> : null}\n        </div>\n    )\n}","export const handleKeywordSearch = (jobs, value) => {\n    const cache = {};\n\n    if (value in cache) {\n        return cache[value];\n    } else {\n        const results = jobs.filter(job => job.title.toLowerCase().includes(value.toLowerCase()));\n        if (results) {\n            cache[value] = results;\n            return results;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport const handleCitySearch = (jobs, value) => {\n    const cache = {};\n\n    if (value in cache) {\n        return cache[value];\n    } else {\n        const results = jobs.filter(job => job.location.toLowerCase().includes(value.toLowerCase()));\n        if (results) {\n            cache[value] = results;\n            return results;\n        } else {\n            return null;\n        }\n    }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Jobs from './Jobs';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nconst JOB_API_URL = '/api/jobs';\n\nasync function fetchJobs(updateCb, loadedCb) {\n  const res = await fetch(JOB_API_URL);\n  const json = await res.json();\n  updateCb(json);\n  loadedCb(true);\n}\n\nfunction App() {\n\n  const [jobList, updateJobs] = useState([]);\n  const [jobsLoaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    fetchJobs(updateJobs, setLoaded);\n  }, []);\n\n  return (\n    <div className=\"App\" style={{ marginTop: '40px' }}>\n      {jobsLoaded ? <Jobs jobs={jobList} /> :\n        <div id=\"loader\">\n          <Loader\n            type=\"Puff\"\n            color=\"#CD853F\"\n            height={90}\n            width={90}\n            visible={!jobsLoaded}\n          />\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}